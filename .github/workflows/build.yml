name: Build S24Ultra-Spoofer_LSPosed APK

on:
  push:
    tags:
      - 'v*'  # Trigger only when a tag starting with 'v' is pushed (e.g., v1.0.0)
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name to build (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  pre_build:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Required to create releases and upload assets
      packages: write  # Required if you're working with packages
      actions: read    # Required to read workflow details

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for tags

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Extract tag name (for push events)
        if: github.event_name == 'push'
        id: extract_tag
        run: |
          TAG_NAME=$(echo $GITHUB_REF | cut -d'/' -f3)
          echo "Extracted tag: $TAG_NAME"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Set tag name (for manual dispatch)
        if: github.event_name == 'workflow_dispatch'
        id: set_tag
        run: |
          echo "Using manually provided tag: ${{ github.event.inputs.tag_name }}"
          echo "tag_name=${{ github.event.inputs.tag_name }}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/*.apk
          name: "Release ${{ steps.extract_tag.outputs.tag_name || steps.set_tag.outputs.tag_name }}"
          tag_name: "${{ steps.extract_tag.outputs.tag_name || steps.set_tag.outputs.tag_name }}"
          body: |
            Automated build of S24Ultra-Spoofer_LSPosed
            Build number: ${{ github.run_number }}
            Commit: ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
